// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbModel;

#nullable disable

namespace dbModel.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20250423000636_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dbModel.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admin_name");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city_name");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("restaurant_name");

                    b.HasKey("LocationId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("dbModel.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("restaurant_name");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int")
                        .HasColumnName("review_count");

                    b.Property<double>("ReviewScore")
                        .HasColumnType("float")
                        .HasColumnName("review_score");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantName");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("dbModel.Review", b =>
                {
                    b.HasOne("dbModel.Location", null)
                        .WithMany()
                        .HasForeignKey("RestaurantName")
                        .HasPrincipalKey("RestaurantName")
                        .IsRequired()
                        .HasConstraintName("FK_Review_Location");
                });
#pragma warning restore 612, 618
        }
    }
}
